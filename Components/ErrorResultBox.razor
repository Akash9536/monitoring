<div 
    class="p-1 align-text-top text-left" 
    style="flex-basis: 8%; @(IsFirstRecord ? "background-color: #efefef;" : "")"
    >
    
    @if (Level >= 0)
    {
        <div>
            <small>
                <span 
                    class="badge rounded-pill bg-secondary"
                    >
                    @MaxLevel
                </span> 
                Max Level
            </small>
        </div>

        <div>
            <small>
                <span 
                    class="badge rounded-pill @(@Level > 0 ? "bg-danger" : "bg-secondary")"
                    >
                    @Level
                </span> 
                Impact Level
            </small>
        </div>

        <div class="progress">
            <div 
                class="progress-bar progress-bar-striped bg-danger" 
                role="progressbar" 
                style="width:@FailurePercent%" 
                aria-valuenow="@FailurePercent" 
                aria-valuemin="0" 
                aria-valuemax="100"
                />

            <div 
                class="progress-bar progress-bar-striped bg-success" 
                role="progressbar" 
                style="width:@SuccessPercent%" 
                aria-valuenow="@SuccessPercent" 
                aria-valuemin="0" 
                aria-valuemax="100"
                />
        </div>
    }
    else
    {
        <div>
            <small>
                <span 
                    class="badge rounded-pill bg-secondary"
                    >
                    @MaxLevel
                </span>
                
                Max Error Level
            </small>
        </div>

        <div>
            <small>
                <span 
                    class="badge rounded-pill bg-info"
                    >
                    No value
                </span>                 
            </small>
        </div>

        <div 
            class="progress"
            >

            @if (IsFirstRecord)
            {
                <div 
                    class="progress-bar progress-bar-striped bg-info" 
                    role="progressbar" 
                    style="width:100%" 
                    aria-valuenow="100" 
                    aria-valuemin="0" 
                    aria-valuemax="100"
                    />
            }
            else 
            {
                <div 
                    class="progress-bar progress-bar-striped bg-warning" 
                    role="progressbar" 
                    style="width:100%" 
                    aria-valuenow="100" 
                    aria-valuemin="0" 
                    aria-valuemax="100"
                    />
            }

        </div>
        }
</div>

@code {

    [Parameter]
    public KibanaResult Result { get; set; }

    [Parameter]
    public bool IsFirstRecord { get; set; }

    private double MaxLevel = 10;
    private double Level;
    private double SuccessPercent;
    private double FailurePercent;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        CalcValues();
    }

    private void CalcValues()
    {
        Console.WriteLine("CalcValues");
        Console.WriteLine($"ErrorPercent: {Result.ErrorPercent}, ErrorPercentBaseline: {Result.ErrorPercentBaseline}");

        var errorPercent = 0.0;

        if (Result.ErrorPercent == 0 || Result.ErrorPercentBaseline == 0)
        {
            Level = -1;
            SuccessPercent = 0;
            FailurePercent = 0;
            return;
        }

        if (Result.ErrorPercent < Result.ErrorPercentBaseline)
        {
            Level = 0;
            SuccessPercent = 100;
            FailurePercent = 0;
            return;
        }

        if (Result.ErrorCount < Result.TotalCount * 0.05)
        {
            Level = 0;
            SuccessPercent = 100;
            FailurePercent = 0;
            return;            
        }

        errorPercent = ((double)Result.ErrorPercent / (double)Result.ErrorPercentBaseline) -1;

        if (errorPercent > 0.1)
        {
            Level = 1;
        }

        if (errorPercent > 0.2)
        {
            Level = 2;
        }

        if (errorPercent > 0.3)
        {
            Level = 3;
        }

        if (errorPercent > 0.4)
        {
            Level = 4;
        }

        if (errorPercent > 0.5)
        {
            Level = 5;
        }

        if (errorPercent > 0.6)
        {
            Level = 6;
        }

        if (errorPercent > 0.7)
        {
            Level = 7;
        }

        if (errorPercent > 0.8)
        {
            Level = 8;
        }

        if (errorPercent > 0.9)
        {
            Level = 9;
        }

        if (errorPercent > 1)
        {
            Level = 10;
        }

        FailurePercent = Level * 10;
        SuccessPercent = (MaxLevel - Level) * 10;

        Console.WriteLine($"Level: {Level}, ErrorPercent {errorPercent}");
        Console.WriteLine($"SuccessPercent: {SuccessPercent}, FailurePercent: {FailurePercent}");
    }

}
